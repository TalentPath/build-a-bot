import * as m3o from "@m3o/m3o-node";
export class ImageService {
    constructor(token) {
        this.client = new m3o.Client({ token: token });
    }
    // Convert an image from one format (jpeg, png etc.) to an other either on the fly (from base64 to base64),
    // or by uploading the conversion result.
    convert(request) {
        return this.client.call("image", "Convert", request);
    }
    // Delete an image previously uploaded.
    delete(request) {
        return this.client.call("image", "Delete", request);
    }
    // Resize an image on the fly without storing it (by sending and receiving a base64 encoded image), or resize and upload depending on parameters.
    // If one of width or height is 0, the image aspect ratio is preserved.
    // Optional cropping.
    resize(request) {
        return this.client.call("image", "Resize", request);
    }
    // Upload an image by either sending a base64 encoded image to this endpoint or a URL.
    // To resize an image before uploading, see the Resize endpoint.
    upload(request) {
        return this.client.call("image", "Upload", request);
    }
}
