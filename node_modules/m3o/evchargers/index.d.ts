export declare class EvchargersService {
    private client;
    constructor(token: string);
    referenceData(request: ReferenceDataRequest): Promise<ReferenceDataResponse>;
    search(request: SearchRequest): Promise<SearchResponse>;
}
export interface Address {
    accessComments?: string;
    addressLine1?: string;
    addressLine2?: string;
    country?: {
        [key: string]: any;
    };
    countryId?: string;
    latLng?: string;
    location?: Coordinates;
    postcode?: string;
    stateOrProvince?: string;
    title?: string;
    town?: string;
}
export interface BoundingBox {
    bottomLeft?: Coordinates;
    topRight?: Coordinates;
}
export interface ChargerType {
    comments?: string;
    id?: string;
    isFastChargeCapable?: boolean;
    title?: string;
}
export interface CheckinStatusType {
    id?: string;
    isAutomated?: boolean;
    isPositive?: boolean;
    title?: string;
}
export interface Connection {
    amps?: number;
    connectionType?: ConnectionType;
    connectionTypeId?: string;
    current?: string;
    level?: ChargerType;
    levelId?: string;
    power?: number;
    reference?: string;
    voltage?: number;
}
export interface ConnectionType {
    formalName?: string;
    id?: string;
    isDiscontinued?: boolean;
    isObsolete?: boolean;
    title?: string;
}
export interface Coordinates {
    latitude?: number;
    longitude?: number;
}
export interface Country {
    continentCode?: string;
    id?: string;
    isoCode?: string;
    title?: string;
}
export interface CurrentType {
    description?: string;
    id?: string;
    title?: string;
}
export interface DataProvider {
    comments?: string;
    dataProviderStatusType?: DataProviderStatusType;
    id?: string;
    license?: string;
    title?: string;
    website?: string;
}
export interface DataProviderStatusType {
    id?: string;
    isProviderEnabled?: boolean;
    title?: string;
}
export interface Operator {
    comments?: string;
    contactEmail?: string;
    faultReportEmail?: string;
    id?: string;
    isPrivateIndividual?: boolean;
    phonePrimary?: string;
    phoneSecondary?: string;
    title?: string;
    website?: string;
}
export interface Poi {
    address?: {
        [key: string]: any;
    };
    connections?: Connection[];
    cost?: string;
    dataProviderId?: string;
    id?: string;
    numPoints?: number;
    operator?: {
        [key: string]: any;
    };
    operatorId?: string;
    usageType?: UsageType;
    usageTypeId?: string;
}
export interface ReferenceDataRequest {
}
export interface ReferenceDataResponse {
    chargerTypes?: ChargerType;
    checkinStatusTypes?: CheckinStatusType;
    connectionTypes?: ConnectionType;
    countries?: Country[];
    currentTypes?: CurrentType;
    dataProviders?: DataProvider;
    operators?: Operator[];
    statusTypes?: StatusType;
    submissionStatusTypes?: SubmissionStatusType;
    usageTypes?: UsageType;
    userCommentTypes?: UserCommentType;
}
export interface SearchRequest {
    box?: BoundingBox;
    connectionTypes?: string;
    countryId?: string;
    distance?: number;
    levels?: string[];
    location?: Coordinates;
    maxResults?: number;
    minPower?: number;
    operators?: string[];
    usageTypes?: string;
}
export interface SearchResponse {
    pois?: Poi[];
}
export interface StatusType {
    id?: string;
    isOperational?: boolean;
    title?: string;
}
export interface SubmissionStatusType {
    id?: string;
    isLive?: boolean;
    title?: string;
}
export interface UsageType {
    id?: string;
    isAccessKeyRequired?: boolean;
    isMembershipRequired?: boolean;
    isPayAtLocation?: boolean;
    title?: string;
}
export interface UserCommentType {
    id?: string;
    title?: string;
}
